import paho.mqtt.client as mqtt
import pymysql
from datetime import datetime
import ssl

#------------------------------------------------------------
# Indirizzo broker mqtt
aws_iot_endpoint = "balsamico.toni.it"
url = "https://{}".format(aws_iot_endpoint)

# Impostazione certificato per autenticazione a mqtt
ca = "PERCORSO CA.crt"     #certification autority
cert = "PERCORSO SERVER.crt"     #certificate
private = "PERCORSO SERVER.key"      #private key

ssl_context = ssl.create_default_context()
ssl_context.load_verify_locations(cafile=ca)
ssl_context.load_cert_chain(certfile=cert, keyfile=private)

#------------------------------------------------------------
# Client mqtt per ricezione nuova misura e inserimento nel database
riceviMisura = mqtt.Client()
#def on_log_ricevi(client, userdata, level, buf):   #funzione per visualizzare dati di log
#    print("log ricevi: ", buf)
#def on_connect_ricevi(client, userdata, flags, rc):
#    print("CONNESSO\n")
def on_message_ricevi(client, userdata, message):
    #print("RICEVUTO\n")
    tmp = datetime.today()
    data_nuova_misura = tmp.date()

    chain = message.payload.decode()
    vals = chain.split(",")
    nomeUtente = vals[0]
    nomeBotte = vals[1]

    db = pymysql.connect("balsamico.toni.it", "marcello", "PASSWORD Database", "database_aceto", 3306)
    cursorObject = db.cursor()

    if len(vals) == 3:
        misura = float(vals[2])
        sqlQuery = "SELECT differenza_livello_mm FROM tabella_botti WHERE nome_botte = " + nomeBotte + " AND possessore = " + nomeUtente
        cursorObject.execute(sqlQuery)
        data = cursorObject.fetchone()
        livelloAceto = data[0] - misura
        sqlQuery = "UPDATE tabella_botti SET differenza_livello_mm = " + str(
            livelloAceto) + ", data_ultima_misura = '" + data_nuova_misura.strftime("%Y-%m-%d") + "' WHERE nome_botte = " + nomeBotte + " AND possessore = " + nomeUtente
    elif len(vals) == 4:
        sqlQuery = "UPDATE tabella_botti SET differenza_livello_mm = '0', data_ultima_misura = '" + data_nuova_misura.strftime("%Y-%m-%d") + "' WHERE nome_botte = " + nomeBotte + " AND possessore = " + nomeUtente

    cursorObject.execute(sqlQuery)
    db.commit()
    db.close()

#riceviMisura.on_log = on_log_ricevi  # set client logging
#riceviMisura.on_connect = on_connect_ricevi
riceviMisura.on_message = on_message_ricevi

riceviMisura.tls_set_context(context=ssl_context)
riceviMisura.connect(aws_iot_endpoint, port=8883)
riceviMisura.subscribe("livelloBalsamico")  #iscrizione al topic mqtt per ricezione nuova misura

#------------------------------------------------------------
# Avvio client
riceviMisura.loop_forever()



